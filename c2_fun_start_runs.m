%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                        %
%               Programm zum Starten den Beckenszenarien                 %
%                                                                        %
%     Das Programm enthält alle simulationslaufspezifischen Parameter    %
%       - Ordnernamen                                                    %
%       - Beckenanzahlen                                                 %
%       - Routingparameter                                               %
%                                                                        %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% clear all
% clc
function c2_fun_start_runs(Gebiet,TG,mOpt,E_no,E_komb,E,path)

cd(path)

% count = 0; err_count = 0;
% while count == err_count
%     try     load('simulation_overview.mat','characteristics')
%     catch;   err_count = err_count + 1;     end
%     count = count + 1; pause(3)
% end
% 
% zeile = characteristics(ismember(characteristics(:,2:6),[Gebiet,TG,mOpt,E_no,E_komb],'rows'),1);
% count = 0; err_count = 0;
% while count == err_count
%     try     load('simulation_overview.mat',sprintf('status_%d',zeile))
%     catch;   err_count = err_count + 1;     end
%     count = count + 1; pause(3)
% end


cd(strcat(path,'\Sim_overview'))
while exist('open_characteristics.txt','file')==2
    pause(5*rand(1))
end
save('open_characteristics.txt','Gebiet','-ascii')
load('characteristics.mat');
delete('open_characteristics.txt')
zeile = characteristics(ismember(characteristics(:,2:6),[Gebiet,TG,mOpt,E_no,E_komb],'rows'),1);

while exist(sprintf('open_status_%d.txt',zeile),'file')==2
    pause(5*rand(1))
end
save(sprintf('open_status_%d.txt',zeile),'Gebiet','-ascii')
load(sprintf('status_%d.mat',zeile));

status = eval(sprintf('status_%d', zeile));
if status(2) == 1
    disp('Simulationsblock wird bereits in einem anderen Matlab-Fenster berechnet.')
    diary off
    quit
end
status(2) = 1;
status(3) = 1;
status(4:5) = now;
tmp = ['status_', num2str(zeile),'= status'];
eval(tmp);
clear tmp
save(sprintf('status_%d.mat',zeile),sprintf('status_%d',zeile))
delete(sprintf('open_status_%d.txt',zeile))

% save('simulation_overview.mat','simulation_overview')

start_all = now;
%% Parameter wählen

if mOpt == 1
    opt_parameter = 300;    % Anzahl der Kombinationen pro Beckenanzahl
    E_no_opt = [[E_no,E_no,E_komb];...
            [setdiff(E,E_no),repmat(E_no,length(E)-1,1),repmat(E_komb,length(E)-1,1)]];
    Beckenkombination_speichern = 0;    % 0: einladen, wenn es existiert; 1: immer neu überspeichern
elseif mOpt == 2
    E_no_opt = [[E_komb,E_komb,E_komb];...
        [setdiff(E,E_komb),repmat(E_komb,length(E)-1,2)];...
        [repmat(setdiff(E,E_komb),1,2),repmat(E_komb,length(E)-1,1)];...
        repmat(E_komb,length(E)-1,1),setdiff(E,E_komb),repmat(E_komb,length(E)-1,1)];
    
    opt_parameter = [];
    anteil1 = .15;
    anteil2 = (1-anteil1*2);
    
    i_all = [1:-.05:0];
    
    for i=i_all
        opt_parameter(end+1,:) = [i*anteil2,anteil1,(1-i)*anteil2,anteil1/2,anteil1/2];
    end
  
    Beckenkombination_speichern = [size(opt_parameter,1),1];
elseif mOpt == 10
    opt_parameter = [102409 101383 110195 100557 100994 507020 508256 510266 502534 503895 505035 509667 507589 502071 503500 604107 603690 703787 703573 700605 700141 933340 1003961 1102867 1104187 1101818 1204873 1206268 1202812 1307329 1412941 1412723 1411080 1408631 1412080 1413409 1526814 1531605 1531105 1531727 1531453 1526721 1600087 1602270 1804232 1806615 1813793 1805888 1806036 1805552 1812312 1805232 1808158 1901165 1902987 1904095 1904542 2002822 2005355 2011823 2012272 2000709 2012758 2012019 2012547 2005951 2010158 2008494 2002562 2107378 2103016 2101898 2105223 2102344 2101701 2101313 2105419 2104156 2101453 2201745 2407483 2408806 2503910 2504279 2503820 2504145 2504419 2502920 2614989 2611804 2604352 2615822 2706033 2704296 2705433 2705197 2709186 2711495 2708119 2703391 2707615 2704765 2708633 2711247 2809874 2808918 2808043 2801667 2908721 2902326 2900266 2908134 2909719 2909350 2902025 2901298 2907704 2903872 2911227 2902885 2908038 2910702 2901352 2903950 2910185 2901524 3003276 3002997 3001352 3000962 3000434 3002472 3106039 3104391 3104108 3102751 3204766 3301965 3413922 3416886 3415297 3416665 3414336 3409994 3418580 3414849 3416118 3503903 3503296 3604404 3603645 3602186 3607230 3606155 3609029 3603564 3608236 3605091 3604184 3706177 3709134 3703062 3705276 3703419 3703793 3709320 3708178 3804732 3803652 3805470 3801472 3805698 3802424 3902474 3901374 3901151 4014116 4011940 4004761 4014645 4103417 4104557 4113327 4110076 4107994 4112782 4112019 4109346 4114784 4107255 4111293 4105735 4114927 4115594 4108409 4115369 4203941 4203182 4205714 4202584 4201569 4204855 4201750 4202036 4203288 4205261 4305754 4304279 4306900 4303658 4304982 4308048 4309145 4304366 4301313 4307039 4301650 4407607 4404672 4407412 4403062 4403956 4402131 4405650 4403244 4403423 4503789 4502362 4503533 4505125 4504181 4504696 4501926 4505273 4501692 4504669 4502102 4606238 4625841 4626362 4706820 4710212 4703840 4702269 4706404 4706136 4706177 4805428 4801374 4802770 4801861 4803146 4804998 4801355 4803448 4800708 4800975 4802260 4800323 4913286 4912035 4909788 4904123 4910899 4912973 4908231 4903679 4903425 4906414 4913095 4911244 4911735 4910731 4902044 4907868 4901197 4908132 4909761 4914008 4911527 4914561 5005756 5002952 5006642 5004493 5006129 5001729 5000520 5006978 5009347 5008762 5003436 5009803 5108375 5100774 5105710 5107600 5113575 5108921 5103070 5110477 5107471 5110020 5107296 5101309 5104499 5204984 5203328 5203770 5202736 5203946 5201178 5404449 5408428 5402509 5403991 5408550 5411125 5404677 5405881 5409051 5401851 5412871 5404867 5413061 5411927 5509834 5504468 5506755 5508686 5509446 5508014 5506052 5501055 5502739 5507560 5504537 5509191 5510293 5610719 5606995 5610036 5609613 5604006 5608266 5604444 5604806 5609031 5605248 5606644 5703718 5702543 5701893 5710146 5701634 5709122 5704324 5701221 5805492 5807391 5808303 5800877 5808003 5807840 5800374 5804371 5909305 5910385 5904048 5903743 5909840 5901015 5900105 6007696 6001608 6005413 6007600 6002259 6000836 6005433 6003330 6004810 6001828 6004279 6003130 6000301 6001228 6007847 6008233 6006608 6007087 6007828 6109076 6107406 6101592 6106762 6105144 6102437 6104522 6101257 6101743 6100977 6100615 6102620 6108578 6107704 6104723 6205515 6208727 6206722 6207342 6208276 6207088 6202058 6209033 6207433 6203329 6202256 6204430 6202777 6204275 6203880 6206338 6203524 6310668 6310831 6307979 6308602 6304805 6314645 6316201 6301504 6300961 6313106 6301094 6308784 6303720 6305867 6302083 6306979 6408128 6405846 6407308 6409676 6402254 6401529 6401058 6400802 6400572 6400333 6401721 6400171 6402502 6509108 6507378 6507699 6508508 6505274 6505755 6505001 6505289 6506159 6506536 6503318 6504194 6503819 6502428 6506379 6507055 6601058 6606043 6604545 6605559 6604979 6602557 6605174 6603110 6601463 6606299 6601360 6604334 6604011 6603569 6605849 6702777 6704081 6707238 6704886 6702691 6703923 6703308 6708027 6702783 6704524 6701397 6708756 6700738 6705887 6706918 6703877 6710233 6710103 6709833 6805177 6804225 6806640 6815186 6812796 6809933 6803994 6806135 6803983 6800205 6808836 6802664 6802647 6912612 6912316 6911452 6913075 6909397 6910726 6904812 6906930 6907599 6902328 6913484 6902224 6902104 6902746 6902408 7007693 7002859 7007484 7003828 7003879 7009326 7007242 7002339 7002146 7002570 7007055 7001363 7001166 7005386 7001753 7001833 7006019 7006726 7000248 7102055 7104017 7105973 7100403 7105127 7102175 7104768 7210646 7202835 7202194 7207380 7209113 7206475 7206490 7203363 7204722 7204090 7210788 7205743 7200483 7208869 7202371 7213020 7211082 7308789 7300726 7310492 7304585 7304737 7301814 7302916 7300001 7302989 7310779 7307744 7304201 7403034 7401431 7402928 7403758 7402097 7401812 7401214 7403279 7402236 7400820 7503986 7507762 7500061 7511375 7509630 7500859 7501177 7504237 7501449 7501685 7501216 7506217 7600638 7602666 7603486 7600094 7609150 7609640 7601726 7612361 7610107 7611225 7611909 7607943 7601223 7608466 7710794 7715164 7706971 7715620 7707968 7716923 7717538 7716205 7716621 7815585 7816769 7818078 7802710 7804146 7807057 7808401 7805371 7800846 7818945 7817499 7804796 7809726 7910639 8008578 8001605 8004715 8007483 8004541 8006363 8002201 8011029 8102699 8100879 8107914 8106704 8203228 8203607 8202676 8200885 8204174 8202451 8203886 8303283 8306058 8304483 8305281 8306646 8400162 8404511 8405601 8406636 8504759 8501534 8503626 8503917 8505412 8505188 8602769 8604466 8601592 8605850 8603484 8605873 8605113 8604058 8704100 8703614 8705223 8702069 8704634 8703893 8704027 8703443 8803611 8802660 8800002 9105073 9104752 9101783 9402888 9406381 9500659 9500374 9500824 9500184 9602802 9603779 9606298 9606083 9606627 9817446 9815363 9824681 9806462 9824287 9902582 9900717 9901835 9908632 9908050 9911698 9910437 9906497 9901361 9910337 9901832 9908961 9907262 9900984 9904251 9906751 9902161 9905517 9905400 10006768 10008253 10003241 10001885 10008109 10001126 10010176 10003864 10002118 10012138 10007546 10006233 10002774 10009507 10001457 10003906 10004264 10015120 10008853 10013691 10101467 10100007 10106184 10101683 10107008 10102300 10100941 10100917 10107299 10204704 10208493 10205512 10211138 10204157 10206385 10208542 10210463 10208207 10206669 10204608 10204133 10203832 10205594 10207760 10207996 10205677 10210963 10209014 10203377 10212098 10212290 10212355 10204505 10303962 10302943 10302299 10300196 10602551 10604982 10606001 10605353 10604559 10603110 10705954 10705313 10704129 10702023 10707264 10701486 10701048 10700081 10809721 10800119 10800705 10809081 10809457 10808300 10807292 10805685 10800425 10803262 10808471 11108674 11106450 11109808 11105674 11112042 11109432 11104878 11208228 11209061 11208631 11309415 11605193 11614361 11612849 11611481 11602271 11603700 11601861 11607147 11604568 11606006 11601073 11713784 11700246 11708989 11705130 11710387 11708308 11707230 11703790 11705867 11706406 11706666 11708499 11703014 11704893 11802600 11800027 11808532 11809770 11811082 11810173 11801165 11905670 11900824 11900194 11905367 12002668 12007512 12001524 12001835 12008451 12107665 12103622 12101411 12100779 12107423 12100627 12103286 12101848 12102916 12100069 12205254 12203721 12201089 12206503 12203514 12204828 12202329 12206016 12207369 12204566 12200665 12203300 12201264 12210336 12204280 12210087 12300280 12305045 12300780 12302372 12303354 12302974 12305668 12303965 12304435 12300493 12301460 12301000 12403279 12401805 12407406 12404492 12406126 12408011 12404032 12410149 12408142 12409888 12413243 12504857 12506489 12503659 12502543 12508554 12507846 12508499 12506702 12508935 12508051 12508659 12508305 12607020 12604455 12605016 12605944 12602426 12609913 12602057 12608995 12609418 12703982 12705039 12706682 12703945 12709253 12709717 12704903 12705638 12709057 12705006 12708844 12702616 12708409 12702028 12705528 12705453 12705783 12800488 12800804 12800224 12801684 12801509 12801115 12802153 12802372 12802934 12801981 12801295 12803397 12803724 12905387 12903485 12904990 12908649 12903831 12905134 12904439 12905646 12900606 12906392 12906830 12907920 12907102 12911037 12904131 12900011 12909838 12909293 12911389 12907750 12908080 12910164 12911610 12908286 12910595 13001925 13000791 13000351 13005342 13005567 13003084 13001528 13003508 13004041 13005835 13004413 13004939 13004564 13001227 13005251 13003450 13106331 13107566 13105361 13105901 13104475 13102223 13101471 13105280 13103152 13101259 13107357 13205231 13206331 13201451 13203055 13205892 13203707 13205224 13206333 13202791 13202455 13207251 13201724 13202037 13201415 13200714 13205712 13303234 13300089 13300810 13304310 13306177 13300466 13302649 13305771 13301621 13303501 13305255 13305296 13306489 13305863 13306178 13403957 13408698 13404610 13404594 13405360 13407084 13402465 13408082 13402782 13401667 13405634 13403028 13403659 13406376 13502886 13505001 13504856 13502641 13507221 13503182 13506845 13504910 13501570 13505204 13507751 13508066 13501011 13507622 13507441 13500804 13501455 13500583 13507953 13500162 13501097 13500662 13602061 13602458 13600402 13603570 13605500 13603926 13604393 13602083 13600954 13601703 13602988 13600154 13600899 13604788 13600519 13605734 13605977 13601817 13601232 13605023 13700628 13703935 13703667 13702524 13704456 13700619 13701327 13703287 13706058 13703903 13702345 13705239 13706639 13702429 13705815 13800094 13807084 13808704 13807520 13805227 13808576 13808193 13808001 13803173 13808963 13806808 13807563 13807359 13906396 13905380 13900395 13903612 13900937 13901124 13901107 14006846 14008571 14011176 14011524 14006393 14009396 14012589 14010906 14008881 14011889 14007951 14012278 14206557 14200293 14205388 14203387 14202098 14201375 14203496 14210309 14200054 14204010 14204687 14206603 14202693 14205079 14207841 14203466 14210229 14209684 14302343 14301482 14304516 14306571 14304652 14302594 14301776 14305478 14304863 14303398 14303395 14303496 14302053 14304530 14310638 14310868 14301156 14300620 14311030 14306706 14305799 14310798 14404484 14400024 14403952 14404184 14405950 14407292 14409569 14408325 14406046 14409992 14406762 14401936 14401691 14406750 14408053 14407720 14405409 14408192 14409149 14405998 14406492 14501187 14501708 14501492 14506051 14504763 14500383 14503350 14502342 14505336 14500565 14500805 14500659 14508043 14508425 14611401 14611983 14607575 14605885 14613620 14603333 14607073 14602733 14609306 14602113 14604209 14601860 14610345 14606414 14601541 14609869 14611775 14608968 14605263 14608172 14603730 14602717 14606006 14608277 14604581 14601035 14613967 14614217 14603570 14612992 14701969 14704177 14704564 14705336 14701355 14704110 14704812 14705157 14702969 14700588 14700992 14702648 14702017 14804938 14806784 14810000 14807730 14803692 14807600 14803264 14806405 14806705 14802344 14809352 14809879 14806930 14808775 14803048 14808230 14808944 14807874 14805704 14804402 14805460 14901976 14905008 14902599 14906007 14903778 14908791 14903865 14907091 14903735 14905826 14903373 14908087 14900262 14901331 14901678 14901461 14905223 14900559 14905094 14908305 14907810 14902005 14903619 14906623 14907594 14906711 14907158 14909880 14907862 14905445 14906050 15005840 15005272 15006768 15004527 15002130 15004184 15000132 15006756 15003826 15003487 15004780 15001572 15004219 15005522 15101305 15101984 15100931 15100791 15101058 15104495 15206871 15205178 15203231 15205543 15202054 15201877 15201578 15204216 15201269 15201802 15202132 15202345 15303603 15302483 15304644 15314004 15302068 15314251 15307053 15312245 15307816 15308816 15301583 15303112 15306819 15410554 15407627 15411317 15410430 15408485 15412364 15410869 15409919 15508788 15510778 15504827 15510757 15506540 15504695 15509560 15509333 15600442 15602241 15603045 15603381 15601958 15601258 15604697 15603718 15601796 15803049 15903790 15905723 16003942 16002171 16001551 16005833 16007976 16013709 16002867 16010465 16008833 16004998 16003202 16013000 16012084 16011737 16014718 16102637 16104340 16103321 16102977 16208680 16212402 16200176 16205798 16203529 16209186 16210663 16212728 16206955 16213423 16203214 16202532 16200829 16212848 16209425 16214100 16201426 16207534 16207929 16207070 16209901 16208196 16207704 16208956 16210376 16302998 16301388 16306341 16305339 16302761 16300312 16302118 16303212 16300763 16307686 16300008 16301694 16308915 16304604 16310485 16302388 16307891 16307443 16306721 16305852 16301954 16304099 16307974 16400146 16401697 16402800 16402231 16401012 16408310 16400764 16403729 16401701 16402430 16403310 16403525 16403046 16404258 16408608 16407793 16405086 16404003 16407127 16406264 16406543 16403836 16500020 16501223 16503519 16503559 16500748 16502417 16501848 16502716 16604882 16603644 16605961 16604543 16607063 16603057 16601782 16606665 16602161 16603373 16701200 16702009 16700826 16704351 16703798 16703246 16705651 16704001 16702780 16802015 16802468 16808240 16804361 16804060 16802943 16803644 16810423 16810523 16804604 16810297 16800923 16803676 16810998 16800615 16915157 16913115 16909155 16911093 16917980 16910069 16904321 16920581 16921490 17008213 17005615 17007201 17006659 17004072 17005864 17007177 17008025 17006771 17004367 17005022 17006650 17007545 17003343 17002443 17108813 17105390 17105257 17105107 17100653 17101465 17105133 17101185 17105875 17104916 17105461 17304095 17302774 17303558 17303011 17407541 17409354 17502315 17504906 17502966 17600891 17600280 17600559 17601286 17800109 17901835 17900146 18002376 18102398 18104486 18103791 18103642 18104829 18200420 18300547 18301807 18300022 18301170 18301884 18400514 18403982 18501796 18501916 18501428 18600295 18601095 18600035 18701935 18702306 18704821 18704172 18703110];
elseif mOpt == 11
    opt_parameter = [4266];
elseif mOpt == 12
    opt_parameter = 5; % Anzahl Becken
elseif mOpt == 13
    opt_parameter = [];
end

%% Funktion starten
if mOpt ~= 2
    f1__catchment_input(Gebiet,TG,...
        E_no_opt,Beckenkombination_speichern,...
        mOpt,opt_parameter)
elseif mOpt == 2
    for i = 1:size(opt_parameter,1)
        Beckenkombination_speichern = [size(opt_parameter,1),i];
        
        f1__catchment_input(Gebiet,TG,...
            E_no_opt,Beckenkombination_speichern,...
            mOpt,opt_parameter(i,:))
    end
end
ende_all = now;
gesamtdauer = (ende_all-start_all)*24*60;
fprintf('Berechnung abgeschlossen. Dauer: %f min.',gesamtdauer)

%% Speichern, dass Berechnung beendet wurde

% cd(path)
% 
% count = 0; err_count = 0;
% while count == err_count
%     try     load('simulation_overview.mat','characteristics')
%     catch;   err_count = err_count + 1;     end
%     count = count + 1; pause(3)
% end
% 
% zeile = characteristics(ismember(characteristics(:,2:6),[Gebiet,TG,mOpt,E_no,E_komb],'rows'),1);
% count = 0; err_count = 0;
% while count == err_count
%     try     load('simulation_overview.mat',sprintf('status_%d',zeile))
%     catch;   err_count = err_count + 1;     end
%     count = count + 1; pause(3)
% end

cd(strcat(path,'\Sim_overview'))
while exist('open_characteristics.txt','file')==2
    pause(5*rand(1))
end
save('open_characteristics.txt','Gebiet','-ascii')
load('characteristics.mat')
delete('open_characteristics.txt')
zeile = characteristics(ismember(characteristics(:,2:6),[Gebiet,TG,mOpt,E_no,E_komb],'rows'),1);

while exist(sprintf('open_status_%d.txt',zeile),'file')==2
    pause(5*rand(1))
end
save(sprintf('open_status_%d.txt',zeile),'Gebiet','-ascii')
load(sprintf('status_%d.mat',zeile))
status = eval(sprintf('status_%d', zeile));
status(2) = 100;    % status: läuft oder nicht
status(3) = 111111; % Fotschritt 8%)
status(5) = now;    % Zeit
tmp = ['status_', num2str(zeile),'= status'];
eval(tmp)
clear tmp
% assignin ('base',['status_' num2str(zeile)], status); 
save(sprintf('status_%d.mat',zeile),sprintf('status_%d',zeile))
delete(sprintf('open_status_%d.txt',zeile))

% m = matfile('simulation_overview.mat');
% zeile = find(ismember(m.simulation_overview(:,1:5),[Gebiet,TG,mOpt,E_no,E_komb],'rows')==1);
% m.simulation_overview(zeile,7) = 111111;
% m.simulation_overview(zeile,8) = 100;
% m.simulation_overview(zeile,10) = now;
% save('simulation_overview.mat','simulation_overview')
fprintf('Simulationsblock erfolgreich abgeschlossen: G%d, TG%d, mOpt%d, E_no%d, E_komb%d.',Gebiet,TG,mOpt,E_no,E_komb)
diary off


%% Matlab schließen
quit